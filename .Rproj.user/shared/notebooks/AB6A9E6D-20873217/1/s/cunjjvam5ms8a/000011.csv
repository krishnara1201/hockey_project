"0","# Convert the 'date' column to Date format"
"0","dtrain$date <- as.Date(dtrain$date)"
"0",""
"0","# Extract date features"
"0","dtrain$year <- year(dtrain$date)"
"0","dtrain$month <- month(dtrain$date)"
"0","dtrain$day <- day(dtrain$date)"
"0","dtrain$day_of_week <- as.factor(wday(dtrain$date, label = FALSE)) # Sunday = 1, Saturday = 7"
"0","dtrain$is_weekend <- as.factor(ifelse(dtrain$day_of_week %in% c(1, 7), 1, 0)) # Weekend flag"
"0",""
"0","# Cyclic encoding for month (to capture periodicity)"
"0","dtrain$month_sin <- sin(2 * pi * dtrain$month / 12)"
"0","dtrain$month_cos <- cos(2 * pi * dtrain$month / 12)"
"0",""
"0","# Drop the original date column (not used directly in GBM)"
"0","dtrain$date <- NULL"
"0","dtrain$month <- NULL"
"0","dtrain$day_of_week <- NULL"
"0",""
"0","# Convert all character columns to factors"
"0","dtrain <- dtrain %>%"
"0","  mutate(across(where(is.character), as.factor))"
"0",""
"0","# Creating new features"
"0","dtrain$npc <- dtrain$takeaway - dtrain$giveaway"
"0","dtrain$pm_per_min <- dtrain$pm/dtrain$toi"
"0","dtrain$ppg <- dtrain$pts/dtrain$gp"
"0",""
"0","dtrain$takeaway <- NULL "
"0","dtrain$giveaway <- NULL"
"0","dtrain$pm <- NULL"
"0","dtrain$pts <- NULL"
"0","dtrain$goal <- NULL"
"0",""
"0","# Doing the same for the testing set, we have:"
"0","# Convert the 'date' column to Date format"
"0","dtest$date <- as.Date(dtest$date)"
"0",""
"0","# Extract date features"
"0","dtest$year <- year(dtest$date)"
"0","dtest$month <- month(dtest$date)"
"0","dtest$day <- day(dtest$date)"
"0","dtest$day_of_week <- as.factor(wday(dtest$date, label = FALSE)) # Sunday = 1, Saturday = 7"
"0","dtest$is_weekend <- as.factor(ifelse(dtest$day_of_week %in% c(1, 7), 1, 0)) # Weekend flag"
"0",""
"0","# Cyclic encoding for month (to capture periodicity)"
"0","dtest$month_sin <- sin(2 * pi * dtest$month / 12)"
"0","dtest$month_cos <- cos(2 * pi * dtest$month / 12)"
"0",""
"0","# Drop the original date column (not used directly in GBM)"
"0","dtest$date <- NULL"
"0","dtest$month <- NULL"
"0",""
"0","# Convert all character columns to factors"
"0","dtest <- dtest %>%"
"0","  mutate(across(where(is.character), as.factor))"
"0",""
"0","# Creating new features"
"0","dtest$npc <- dtest$takeaway - dtest$giveaway"
"0","dtest$pm_per_min <- dtest$pm/dtest$toi"
"0","dtest$ppg <- dtest$pts/dtest$gp"
"0",""
"0","dtest$takeaway <- NULL "
"0","dtest$giveaway <- NULL"
"0","dtest$pm <- NULL"
"0","dtest$pts <- NULL"
"0","dtest$goal <- NULL"
"0","dtest$day_of_week <- NULL"
"0",""
"0","dtest$salary <- 1"
